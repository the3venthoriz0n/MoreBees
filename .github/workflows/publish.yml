name: Publish Mod

# on:
#   push:
#     branches:
#       - feature/git-workflows

on:
  workflow_dispatch:


jobs:
  build_mod:
    runs-on: ubuntu-latest

    env:
      name: ''
      version_number: ''
      website_url: ''
      description: ''
      dependencies: ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
      
      - name: Install Required Packages
        run: |
          apt-get update
          apt-get install -y jq zip wget
        
      - name: Extract variables from manifest.json
        run: |
          manifest=$(cat manifest.json)
          name=$(echo "$manifest" | jq -r '.name')
          version_number=$(echo "$manifest" | jq -r '.version_number')
          website_url=$(echo "$manifest" | jq -r '.website_url')
          description=$(echo "$manifest" | jq -r '.description')
          dependencies=$(echo "$manifest" | jq -r '.dependencies | join(", ")')

          echo "::set-env name=name::$name"
          echo "::set-env name=version_number::$version_number"
          echo "::set-env name=website_url::$website_url"
          echo "::set-env name=description::$description"
          echo "::set-env name=dependencies::$dependencies"

      - name: Print environment variables
        run: |
          echo "Name: $name"
          echo "Version Number: $version_number"
          echo "Website URL: $website_url"
          echo "Description: $description"
          echo "Dependencies: $dependencies"

      - name: Zip files
        run: |
          zip mod.zip icon.png README.md CHANGELOG.md manifest.json
        working-directory: ${{ github.workspace }}

      # - name: Upload Zip Artifact
      #   uses: actions/upload-artifact@main
      #   with:
      #     name: packaged-mod
      #     path: ${{ github.workspace }}/mod.zip
      #     retention-days: 7  # Set retention period to 7 days


      - name: Fetch latest tcli release information
        id: latest_release
        run: |
          latest_release=$(wget -qO- https://api.github.com/repos/thunderstore-io/thunderstore-cli/releases)
          echo "::set-output name=download_url::$(echo $latest_release | jq -r '.[].assets[] | select(.name | contains("linux")) | .browser_download_url' | head -n 1)"
          version=$(echo "$download_url" | awk -F '/' '{print $NF}' | cut -d '-' -f 2)

      - name: Download Thunderstore CLI
        run: |
          wget -O thunderstore-cli.tar.gz "${{ steps.latest_release.outputs.download_url }}"

      - name: Extract Thunderstore CLI
        run: |
          tar -xvf thunderstore-cli.tar.gz

      - name: Install Thunderstore CLI
        run: |
          mv tcli-*/tcli /usr/local/bin/

      - name: Verify tcli Installation
        run: tcli --version
        id: verify
        continue-on-error: true  # Continue even if the command fails

      # - name: Publish to Thunderstore
      #   id: publish
      #   run: |
      #     tcli publish \
      #     --token ${{secrets.THUNDERSTORE_API_TOKEN}} \
      #     --file ${{github.workspace}}/mod.zip
          
